@model ListaPaginaMiradouros

@{
	//Layout = "_Layout";
	ViewData["Title"] = "Paisagens";
}
@*localhost:44369/Ambiente/Paisagens*@

<section class="wrapper style3 container special">

	<header class="major">
		<h2>Paisagens </h2>
		<p>
			Há paisagens um pouco por todo o mundo que são incriveis e quase totalmente desconhecidas,
			<br />outras passamos por elas vezes sem conta e nem reparamos.
		</p>
	</header>
	<body>
		<div class="row centrado">
			@{
				int i = 0;//ver
				int contagem = 0;
				int contamipaisagem = 0;
				@foreach (var paisagem in Model.MiradouroPaisagem)
				{
					<div class="column" style="margin:1%">
						@{
							contamipaisagem++;
							var base64 = Convert.ToBase64String(paisagem.Fotografia);
							var imgsrc = string.Format("data:image/gif; base64,{0}", base64);
							<img src='@imgsrc' style="width:100%" onclick="document.getElementById('id+@paisagem.MiradouroId').style.display='block', currentmiradouro(@contamipaisagem)" class="hover-shadow cursor" />
							@*<img src='@imgsrc' style="width:100%" onclick="openModal();currentSlide(1);" class="hover-shadow cursor">*@
							@Html.DisplayFor(m => paisagem.Nome);
						}

						<div id="id+@paisagem.MiradouroId" class="modal">
							<span class="close cursor" onclick="document.getElementById('id+@paisagem.MiradouroId').style.display='none'">&times;</span>
							<form class="modal-content">
								<div class="caption-container">
									<p>@paisagem.Nome</p>
								</div>
								<div class="rowslide">
									@{
										foreach (var fotografiasslide in Model.Fotografias.Where(p => p.MiradouroId == paisagem.MiradouroId))
										{
											var base64Slide = Convert.ToBase64String(fotografiasslide.Fotografia);
											var imgsrcSlide = string.Format("data:image/gif; base64,{0}", base64Slide);
											contagem++;
											<div class="columnslide">
												<img src='@imgsrcSlide' style="width:100%; max-height:110px" alt="@fotografiasslide.FotoId" class="hover-shadow demo cursor" onclick="currentSlide(@contagem, @contamipaisagem)" />
												<p>@fotografiasslide.FotoId</p>
											</div>
										}
									}
								</div>
								<div class="container">
									@foreach (var fotografiaAtual in Model.Fotografias.Where(p => p.MiradouroId == paisagem.MiradouroId))
									{
										var base64Atual = Convert.ToBase64String(fotografiaAtual.Fotografia);
										var imgsrcAtual = string.Format("data:image/gif; base64,{0}", base64Atual);
										<div class="mySlides">
											@*<div class="numbertext">@Html.Encode(controlo) / 5</div>*@
											<img src='@imgsrcAtual' style="width:100%">
										</div>
									}
									<a class="prev" onclick="plusSlides(-1, @contamipaisagem)">❮</a>
									<a class="next" onclick="plusSlides(1, @contamipaisagem)">❯</a>

									<div class="caption-container">
										<p id="caption"></p>
									</div>
								</div>

								<div class="descricaoimg">
									<p>
										Localização:
										@Html.DisplayFor(modelItem => paisagem.Localizacao)
									</p>
                                    <p>
                                        @{
                                            string linkDD = "https://www.google.pt/maps/place/" + paisagem.Coordenadas_DD;
                                            string linkDMS = "https://www.google.pt/maps/place/" + paisagem.Coordenadas_DMS;
                                        }
                                        Coordenadas GPS:
                                        <a href=@linkDD target="_blank">@paisagem.Coordenadas_DD</a>
                                        <a href=@linkDMS target="_blank">@paisagem.Coordenadas_DMS</a>
                                    </p>
									<p>
										Terreno:
										@Html.DisplayFor(modelItem => paisagem.Terreno)
									</p>
									<p>
										Condições:
										@Html.DisplayFor(modelItem => paisagem.Condicoes)
									</p>
									<p>
										Ocupação maxima:
										@Html.DisplayFor(modelItem => paisagem.Ocupacao_maxima)
									</p>
									<p>
										Descrição:
										@Html.DisplayFor(modelItem => paisagem.Descricao)
									</p>
								</div>
							</form>
						</div>
					</div>
				}
			}
		</div>

		<nav>
			<ul class="pagination">
				@{
					if (Model.pagination.TotalPages > 1)
					{
						if (Model.pagination.CurrentPage == 1)
						{
							<li class="page-item"><a class="page-link active" asp-action="Paisagens" asp-route-page="1">1</a></li>
						}
						else
						{
							<li class="page-item"><a class="page-link" asp-action="Paisagens" asp-route-page="1">1</a></li>
						}



						int primeiraPagina = Model.pagination.CurrentPage - PagingInfoMiradouro.NUMERO_ANTES;
						if (primeiraPagina < 1)
						{
							primeiraPagina = 1;
						}

						int ultimaPagina = Model.pagination.CurrentPage + PagingInfoMiradouro.NUMERO_ANTES;
						if (ultimaPagina > Model.pagination.TotalPages)
						{
							ultimaPagina = Model.pagination.TotalPages;
						}

						@for (int p = primeiraPagina + 1; p < ultimaPagina; p++)
						{
							if (p == Model.pagination.CurrentPage)
							{
								<li class="page-item"><a class="page-link active" href="#">@p</a></li>
							}
							else
							{
								<li class="page-item"><a class="page-link" asp-action="Paisagens" asp-route-page="@p">@p</a></li>
							}
						}

						if (Model.pagination.CurrentPage == Model.pagination.TotalPages)
						{
							<li class="page-item"><a class="page-link active" asp-action="Paisagens" asp-route-page="@Model.pagination.TotalPages">@Model.pagination.TotalPages</a></li>
						}
						else
						{
							<li class="page-item"><a class="page-link" asp-action="Paisagens" asp-route-page="@Model.pagination.TotalPages">@Model.pagination.TotalPages</a></li>
						}

					}
				}
			</ul>
		</nav>
	</body>
	<footer class="major">
	</footer>
</section>

