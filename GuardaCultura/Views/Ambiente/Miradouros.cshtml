@* @model IEnumerable<GuardaCultura.Models.Miradouro>*@

@model ListaPaginaMiradouros

@*@{
    ViewData["Title"] = "Miradouros";
}*@

<header class="special container">
    <span class="icon solid fa-chart-bar"></span>
    <h2>
        <strong>Para dias turbulentos, é bom apanhar ar puro.</strong>
    </h2>
    <p>
        Num pais naturalmente vocacionado para o turismo,
        as paisagens naturais que os miradouros, cascatas e parques naturais nos oferecem
        são um bom chamaris para quem procura tranquilidade.
    </p>
</header>

<!-- One -->
<section class="wrapper style1 container special">
    <h2>Miradouros</h2>

    <header class="major">
        <p>
            Há paisagens um pouco por todo o mundo que são incriveis e quase totalmente desconhecidas,
            <br />outras passamos por elas vezes sem conta e nem reparamos.
        </p>
    </header>
    <body>

        <div class="row centrado">
            @foreach (var item in Model.Miradouros)
            {
            <div class="column" style="margin:1%">
                @*<img src="~/apresentacao/imagens/guarda3.jpg" style="width:100%" onclick="openModal();currentSlide(2);" class="hover-shadow cursor">*@
                @{
                    float teste = Model.Fotografias.Where(p => p.MiradouroId == item.MiradouroId).Max(p => p.Classificacao);

                    byte[] fotografia = Model.Fotografias.Where(p => p.MiradouroId == item.MiradouroId).Where(p => p.Classificacao == teste).Max(p => p.Foto);
                    //fotografia = (Fotografia)item.Fotografias.Where(p => p.MiradouroId == item.MiradouroId).Where(p => p.Classificacao == teste);

                    var base64 = Convert.ToBase64String(fotografia);
                    var imgsrc = string.Format("data:image/gif; base64,{0}", base64);
                }
                <img src='@imgsrc' style="width:100%" onclick="openModal();currentSlide(2);" class="hover-shadow cursor"/>
            </div>
                /*<div class="column" style="margin:1%">
                    @{
                        var base64 = Convert.ToBase64String(item.tabelaFotografia.Foto);// não funciona
                        var imgsrc = string.Format("data:image/gif; base64,{0}", base64);
                    }
                    <img src='@imgsrc' style="width:100%" onclick="openModal();currentSlide(1);" class="hover-shadow cursor">
                </div>*/
            }

            @*<div class="column" style="margin:1%">
                <img src="~/apresentacao/imagens/guarda1.jpg" style="width:100%" onclick="openModal();currentSlide(1);" class="hover-shadow cursor">
            </div>
            <div class="column" style="margin:1%">
                <img src="~/apresentacao/imagens/guarda2.jpg" style="width:100%" onclick="openModal();currentSlide(2);" class="hover-shadow cursor">
            </div>
            <div class="column" style="margin:1%">
                <img src="~/apresentacao/imagens/guarda3.jpg" style="width:100%" onclick="openModal();currentSlide(3)" class="hover-shadow cursor">
            </div>
            <div class="column" style="margin:1%">
                <img src="~/apresentacao/imagens/guarda4.jpg" style="width:100%" onclick="openModal();currentSlide(4)" class="hover-shadow cursor">
            </div>
            <div class="column" style="margin:1%">
                <img src="~/apresentacao/imagens/guarda5.jpg" style="width:100%" onclick="openModal();currentSlide(5)" class="hover-shadow cursor">
            </div>
            <div class="column" style="margin:1%">
                <img src="~/apresentacao/imagens/guarda6.jpg" style="width:100%" onclick="openModal();currentSlide(6)" class="hover-shadow cursor">
            </div>*@
        </div>

        <div id="id " class="modal">
            <span class="close cursor" onclick="closeModal()">&times;</span>
            <form class="modal-content">
                <div class="container">
                    <!--interacao com a funcao titulo-->
                    <div class="caption-container">
                        <p class="tituloimg" id="caption"></p>
                    </div>

                    @foreach (var item in Model.Miradouros)
                    {
                        @if (item.E_Miradouro)
                        {
                            <!-- imagens slider -->
                            <div class="mySlides">

                            <!--<div class="numbertext">1 / 4</div>-->
                            <!--<img class="demo" src="~/apresentacao/imagens/guarda3.jpg" style="width:100%" alt="@item.Nome.ToString()">-->@*Um ponto de vista diferente!*@

                            @{
                                float teste = Model.Fotografias.Where(p => p.MiradouroId == item.MiradouroId).Max(p => p.Classificacao);

                                byte[] fotografia = Model.Fotografias.Where(p => p.MiradouroId == item.MiradouroId).Where(p => p.Classificacao==teste).Max(p=>p.Foto);
                                //fotografia = (Fotografia)item.Fotografias.Where(p => p.MiradouroId == item.MiradouroId).Where(p => p.Classificacao == teste);

                                var base64 = Convert.ToBase64String(fotografia);
                                var imgsrc = string.Format("data:image/gif; base64,{0}", base64);
                             }
                                <img src='@imgsrc' style="width:100%" />


                                <div class="descricaoimg">
                                    <p>
                                        Nome:
                                        @Html.DisplayFor(modelItem => item.Nome)
                                    </p>
                                    <p>
                                        Localização:
                                        @Html.DisplayFor(modelItem => item.Localizacao)
                                    </p>
                                    <p>
                                        Coordenadas GPS:
                                        @Html.DisplayFor(modelItem => item.Coordenadas_gps)
                                    </p>
                                    <p>
                                        Terreno:
                                        @Html.DisplayFor(modelItem => item.Terreno)
                                    </p>
                                    <p>
                                        Condições:
                                        @Html.DisplayFor(modelItem => item.Condicoes)
                                    </p>
                                    <p>
                                        Ocupação maxima:
                                        @Html.DisplayFor(modelItem => item.Ocupacao_maxima)
                                    </p>
                                    <p>
                                        Descrição:
                                        @Html.DisplayFor(modelItem => item.Descricao)
                                    </p>

                                </div>
                            </div>
                        }
                    }

                    <!--Butoes-->
                    <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
                    <a class="next" onclick="plusSlides(1)">&#10095;</a>
                </div>
            </form>
        </div>

        <nav>
            <ul class="pagination">
                @{
                    if (Model.pagination.TotalPages > 1)
                    {
                        if (Model.pagination.CurrentPage == 1)
                        {
                            <li class="page-item"><a class="page-link active" asp-action="Miradouros" asp-route-e_miradouro="0" asp-route-estado="0" asp-route-page="1">1</a></li>
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" asp-action="Miradouros" asp-route-e_miradouro="0" asp-route-estado="0" asp-route-page="1">1</a></li>
                        }



                        int primeiraPagina = Model.pagination.CurrentPage - PagingInfoMiradouro.NUMERO_ANTES;
                        if (primeiraPagina < 1)
                        {
                            primeiraPagina = 1;
                        }

                        int ultimaPagina = Model.pagination.CurrentPage + PagingInfoMiradouro.NUMERO_ANTES;
                        if (ultimaPagina > Model.pagination.TotalPages)
                        {
                            ultimaPagina = Model.pagination.TotalPages;
                        }

                        @for (int p = primeiraPagina + 1; p < ultimaPagina; p++)
                        {
                            if (p == Model.pagination.CurrentPage)
                            {
                                <li class="page-item"><a class="page-link active" href="#">@p</a></li>
                            }
                            else
                            {
                                <li class="page-item"><a class="page-link" asp-action="Miradouros" asp-route-e_miradouro="0" asp-route-estado="0" asp-route-page="@p">@p</a></li>
                            }
                        }

                        if (Model.pagination.CurrentPage == Model.pagination.TotalPages)
                        {
                            <li class="page-item"><a class="page-link active" asp-action="Miradouros" asp-route-e_miradouro="0" asp-route-estado="0" asp-route-page="@Model.pagination.TotalPages">@Model.pagination.TotalPages</a></li>
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" asp-action="Miradouros" asp-route-e_miradouro="0" asp-route-estado="0" asp-route-page="@Model.pagination.TotalPages">@Model.pagination.TotalPages</a></li>
                        }

                    }
                }
            </ul>
        </nav>
    </body>
</section>
